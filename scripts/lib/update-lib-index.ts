import fs from 'fs';
import path from 'path';
import { CLIEngine } from 'eslint';
import camelcase from 'camelcase';
import { rules } from './rules';

const filePath = path.resolve(__dirname, '../../src/index.ts');
const rawContent = `/* DON'T EDIT THIS FILE. This is generated by 'scripts/lib/update-lib-index.ts' */
import { TSESLint } from '@typescript-eslint/experimental-utils';
import recommended from './configs/recommended';
${rules
  .map((rule) => `import ${camelcase(rule.name)} from "./rules/${rule.name}"`)
  .join(';\n')}

export const configs: TSESLint.Linter.Plugin['configs'] = {
  recommended,
};

export const rules: TSESLint.Linter.Plugin['rules'] = {
  ${rules
    .map((rule) => `"${rule.name}": ${camelcase(rule.name)}`)
    .join(',\n  ')}
};
`;
const engine = new CLIEngine({ fix: true });
const lintResult = engine.executeOnText(rawContent, filePath);
const content = lintResult.results[0].output || rawContent;

fs.writeFileSync(filePath, content);
